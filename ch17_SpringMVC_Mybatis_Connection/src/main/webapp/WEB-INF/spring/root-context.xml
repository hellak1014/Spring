<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="com.springproj.biz"/>
	
	<!-- AOP annotation을 위한 설정 -->
	<aop:aspectj-autoproxy />
	
	<!-- 스프링 JDBC 설정 방법 -->
	<context:property-placeholder location="classpath:config/database.properties"/>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}"/>
		<property name="username" value="${name}"/>
		<property name="password" value="${pw}"/>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Transaction 설정 
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.springproj.biz..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	-->
	
	
	<!-- Spring과 Mybatis 연동 설정 방법 1번.-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/> <!-- setter 매서드. 호출하면서 dataSource 객체 전달. ref 사용-->
		<!-- sqlMapConfig.xml (설정파일) 읽어갈 수 있도록 설정. 문자열로 주소 전달하기 때문에 value 사용.-->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	</bean>
	
	<!-- Spring과 Mybatis 연동 설정 방법 2번.-->
	<bean class="org.mybatis.spring.SqlSessionTemplate"> <!-- bean 생성할때 생성자를 통해 전달. -->
		<constructor-arg ref="sqlSession"/> 
		<!-- 위에서 만들었던 oracle 계정으로 사용한다는 내용과 설정파일의 정보가 담긴 sqlSession를 전달받음  -->
		
	</bean>
	
</beans>
